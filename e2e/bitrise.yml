format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

workflows:
  test_bazel_build:
    before_run:
    - _setup
    steps:
    - path::./:
        title: Test Current Step
        run_if: "true"
        is_skippable: false
        inputs:
        - enable_rbe: true
        - timestamps: true
    - script:
        title: Check bazelrc
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            echo "~/.bazelrc content:"
            cat ~/.bazelrc

            if grep -q "build --remote_cache=" ~/.bazelrc; then
              echo "Remote cache enabled in bazelrc ✅"
            else
              echo "Remote cache not enabled in bazelrc ❌"
              exit 1
            fi

             if grep -q "build --bes_backend=" ~/.bazelrc; then
              echo "BES set in bazelrc ✅"
            else
              echo "BES not set in bazelrc ❌"
              exit 1
            fi
    - change-workdir:
        title: Switch working dir to _tmp
        inputs:
        - path: ./_tmp
    - script:
        title: Install bazel
        run_if: "{{ .IsCI }}"
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -exo pipefail

            # Download Bazelisk using curl
            # Define the Bazelisk version you want to install
            export BAZELISK_VERSION='1.26.0'

            # Determine the operating system
            OS="$(uname -s)"
            case "$OS" in
              Linux*)     OS_NAME=linux;;
              Darwin*)    OS_NAME=darwin;;
              *)          echo "Unsupported OS: $OS"; exit 1;;
            esac

            # Download Bazelisk using curl based on the operating system
            if [ "$OS_NAME" = "linux" ]; then
              curl -fLO "https://github.com/bazelbuild/bazelisk/releases/download/v${BAZELISK_VERSION}/bazelisk-linux-amd64"
              mv bazelisk-linux-amd64 bazel
            elif [ "$OS_NAME" = "darwin" ]; then
              curl -fLO "https://github.com/bazelbuild/bazelisk/releases/download/v${BAZELISK_VERSION}/bazelisk-darwin-arm64"
              mv bazelisk-darwin-arm64 bazel

              brew install gnu-tar
              brew install coreutils
            fi

            # Make the binary executable
            chmod +x bazel

            where bazel || true
            brew unlink bazel || true

            sudo mv bazel /usr/local/bin/

            # Verify the installation
            bazel --version
            uname -m
            
            echo "$PATH"
            export PATH=/usr/bin:$PATH  
              
            where file
              
            file bazel-out/darwin_arm64-opt-exec-ST-fad1763555eb/bin/external/rules_pkg~/pkg/private/tar/build_tar
            ls -l bazel-out/darwin_arm64-opt-exec-ST-fad1763555eb/bin/external/rules_pkg~/pkg/private/tar/build_tar
    - script:
        title: Run Bazel build
        deps:
          brew:
          - name: bazel
        inputs:
        - content: |-
            #!/bin/env bash

            bazel sync
            bazel build //src:bazel-dev --announce_rc --verbose_failures
  _setup:
    envs:
    - USE_BAZEL_VERSION: 7.4.0
    steps:
    - script:
        title: Delete _tmp dir
        inputs:
        - content: rm -rf _tmp
    - git::https://github.com/bitrise-steplib/bitrise-step-simple-git-clone.git:
        inputs:
        - repository_url: https://github.com/bazelbuild/bazel.git
        - clone_into_dir: ./_tmp
        - tag: 7.4.0
        - clone_depth: 1
